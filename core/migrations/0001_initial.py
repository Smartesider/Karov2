# Generated by Django 4.2 on 2025-07-27 10:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('role', models.CharField(choices=[('client', 'Client'), ('lawyer', 'Lawyer'), ('admin', 'Administrator')], default='client', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('organization', models.CharField(blank=True, max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepts_marketing', models.BooleanField(default=False)),
                ('gdpr_consent', models.BooleanField(default=False)),
                ('gdpr_consent_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'core_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)])),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('file_attachment', models.FileField(blank=True, upload_to='content/files/')),
                ('image', models.ImageField(blank=True, upload_to='content/images/')),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=200)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content',
                'verbose_name_plural': 'Content',
                'db_table': 'core_content',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('article', 'Article'), ('form', 'Form/Template'), ('qa', 'Q&A'), ('resource', 'Resource'), ('event', 'Event')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content Category',
                'verbose_name_plural': 'Content Categories',
                'db_table': 'core_content_category',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LegalPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=200)),
                ('package_type', models.CharField(choices=[('bevillingsforvaltning', 'Saksbehandlerstøtte – bevillingsforvaltning'), ('arbeidsrett', 'Saksbehandlerstøtte – arbeidsrett & HR'), ('forvaltningsrett', 'Saksbehandlerstøtte – generell forvaltningsrett'), ('helse', 'Saksbehandlerstøtte – helse og pasient/brukerrettigheter')], max_length=50, unique=True)),
                ('description', models.TextField()),
                ('detailed_description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('trial_period_days', models.PositiveIntegerField(default=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('color_primary', models.CharField(default='#3E4D50', max_length=7)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('features', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Legal Package',
                'verbose_name_plural': 'Legal Packages',
                'db_table': 'core_legal_package',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('content_view', 'Content Viewed'), ('content_download', 'Content Downloaded'), ('package_access', 'Package Accessed'), ('profile_update', 'Profile Updated'), ('subscription_change', 'Subscription Changed')], max_length=30)),
                ('description', models.CharField(max_length=200)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.content')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.legalpackage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'db_table': 'core_user_activity',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PackageSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('trial', 'Trial')], default='trial', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('starts_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField()),
                ('auto_renew', models.BooleanField(default=False)),
                ('price_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.legalpackage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Package Subscription',
                'verbose_name_plural': 'Package Subscriptions',
                'db_table': 'core_package_subscription',
            },
        ),
        migrations.AddIndex(
            model_name='legalpackage',
            index=models.Index(fields=['package_type'], name='core_legal__package_f24a77_idx'),
        ),
        migrations.AddIndex(
            model_name='legalpackage',
            index=models.Index(fields=['is_active'], name='core_legal__is_acti_bab1fc_idx'),
        ),
        migrations.AddIndex(
            model_name='legalpackage',
            index=models.Index(fields=['sort_order'], name='core_legal__sort_or_860006_idx'),
        ),
        migrations.AddIndex(
            model_name='contentcategory',
            index=models.Index(fields=['category_type'], name='core_conten_categor_fd8005_idx'),
        ),
        migrations.AddIndex(
            model_name='contentcategory',
            index=models.Index(fields=['is_active'], name='core_conten_is_acti_078b72_idx'),
        ),
        migrations.AddField(
            model_name='content',
            name='author',
            field=models.ForeignKey(limit_choices_to={'role': 'lawyer'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='content',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.contentcategory'),
        ),
        migrations.AddField(
            model_name='content',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.legalpackage'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'activity_type'], name='core_user_a_user_id_2c3e11_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['created_at'], name='core_user_a_created_540a52_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['activity_type'], name='core_user_a_activit_d64453_idx'),
        ),
        migrations.AddIndex(
            model_name='packagesubscription',
            index=models.Index(fields=['user', 'is_active'], name='core_packag_user_id_27c76f_idx'),
        ),
        migrations.AddIndex(
            model_name='packagesubscription',
            index=models.Index(fields=['package', 'is_active'], name='core_packag_package_b958a5_idx'),
        ),
        migrations.AddIndex(
            model_name='packagesubscription',
            index=models.Index(fields=['expires_at'], name='core_packag_expires_57679d_idx'),
        ),
        migrations.AddIndex(
            model_name='packagesubscription',
            index=models.Index(fields=['status'], name='core_packag_status_f4f71b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='packagesubscription',
            unique_together={('user', 'package')},
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['package', 'status'], name='core_conten_package_c36977_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['category', 'status'], name='core_conten_categor_9d471d_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['author'], name='core_conten_author__709505_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['published_at'], name='core_conten_publish_c3e69f_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['featured'], name='core_conten_feature_fabdbc_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='core_user_email_38052c_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='core_user_role_73872d_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified'], name='core_user_is_veri_959b73_idx'),
        ),
    ]
