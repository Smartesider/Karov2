# Generated by Django 4.2 on 2025-07-27 11:25

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentBookmark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this content')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Content Bookmark',
                'verbose_name_plural': 'Content Bookmarks',
                'db_table': 'core_content_bookmark',
            },
        ),
        migrations.CreateModel(
            name='ContentVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version_number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('content_data', models.TextField()),
                ('excerpt', models.TextField(blank=True, max_length=500)),
                ('change_summary', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Content Version',
                'verbose_name_plural': 'Content Versions',
                'db_table': 'core_content_version',
                'ordering': ['-version_number'],
            },
        ),
        migrations.CreateModel(
            name='PackageAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_duration', models.PositiveIntegerField(default=0, help_text='Session duration in seconds')),
                ('pages_viewed', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Package Access',
                'verbose_name_plural': 'Package Access Records',
                'db_table': 'core_package_access',
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('bookmarked', 'Bookmarked')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('time_spent', models.PositiveIntegerField(default=0, help_text='Time spent in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Progress',
                'verbose_name_plural': 'User Progress',
                'db_table': 'core_user_progress',
            },
        ),
        migrations.AlterModelOptions(
            name='content',
            options={'ordering': ['-priority', '-published_at', '-created_at'], 'verbose_name': 'Content', 'verbose_name_plural': 'Content'},
        ),
        migrations.AddField(
            model_name='content',
            name='average_reading_time',
            field=models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes'),
        ),
        migrations.AddField(
            model_name='content',
            name='content_type',
            field=models.CharField(choices=[('article', 'Article'), ('form', 'Form/Template'), ('qa', 'Q&A'), ('resource', 'Resource Document'), ('checklist', 'Checklist'), ('guide', 'Step-by-step Guide')], default='article', max_length=20),
        ),
        migrations.AddField(
            model_name='content',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newer_versions', to='core.content'),
        ),
        migrations.AddField(
            model_name='content',
            name='priority',
            field=models.PositiveIntegerField(default=0, help_text='Higher numbers appear first'),
        ),
        migrations.AddField(
            model_name='content',
            name='scheduled_publish_at',
            field=models.DateTimeField(blank=True, help_text='Schedule content for future publication', null=True),
        ),
        migrations.AddField(
            model_name='content',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='Add tags separated by commas', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='content',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='access_level',
            field=models.CharField(choices=[('basic', 'Basic Access'), ('standard', 'Standard Access'), ('premium', 'Premium Access'), ('enterprise', 'Enterprise Access')], default='standard', max_length=20),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='banner_image',
            field=models.ImageField(blank=True, upload_to='packages/banners/'),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='benefits',
            field=models.JSONField(blank=True, default=list, help_text='Key benefits of this package'),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='color_secondary',
            field=models.CharField(default='#A7B9BC', max_length=7),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='content_categories',
            field=models.ManyToManyField(blank=True, related_name='packages', to='core.contentcategory'),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='max_users',
            field=models.PositiveIntegerField(default=1, help_text='Maximum users per subscription'),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='meta_keywords',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='monthly_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='target_audience',
            field=models.JSONField(blank=True, default=list, help_text='Who this package is designed for'),
        ),
        migrations.AddField(
            model_name='legalpackage',
            name='testimonials',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AlterField(
            model_name='content',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='core.contentcategory'),
        ),
        migrations.AlterField(
            model_name='content',
            name='content',
            field=ckeditor.fields.RichTextField(),
        ),
        migrations.AlterField(
            model_name='content',
            name='excerpt',
            field=models.TextField(blank=True, help_text='Brief summary for listings and search results', max_length=500),
        ),
        migrations.AlterField(
            model_name='content',
            name='file_attachment',
            field=models.FileField(blank=True, help_text='PDF, DOC, DOCX, XLS, XLSX files only', upload_to='content/files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx'])]),
        ),
        migrations.AlterField(
            model_name='content',
            name='image',
            field=models.ImageField(blank=True, help_text='Featured image for the content', upload_to='content/images/'),
        ),
        migrations.AlterField(
            model_name='content',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='core.legalpackage'),
        ),
        migrations.AlterField(
            model_name='content',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20),
        ),
        migrations.AlterField(
            model_name='contentcategory',
            name='category_type',
            field=models.CharField(choices=[('article', 'Article'), ('form', 'Form/Template'), ('qa', 'Q&A'), ('resource', 'Resource'), ('event', 'Event'), ('checklist', 'Checklist'), ('guide', 'Guide')], max_length=20),
        ),
        migrations.AlterField(
            model_name='legalpackage',
            name='detailed_description',
            field=ckeditor.fields.RichTextField(blank=True),
        ),
        migrations.AlterField(
            model_name='legalpackage',
            name='features',
            field=models.JSONField(blank=True, default=list, help_text='List of features included in this package'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['content_type'], name='core_conten_content_c62a22_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['priority'], name='core_conten_priorit_0b7556_idx'),
        ),
        migrations.AddIndex(
            model_name='legalpackage',
            index=models.Index(fields=['is_featured'], name='core_legal__is_feat_864ab4_idx'),
        ),
        migrations.AddField(
            model_name='userprogress',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='core.content'),
        ),
        migrations.AddField(
            model_name='userprogress',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='packageaccess',
            name='content_accessed',
            field=models.ManyToManyField(blank=True, to='core.content'),
        ),
        migrations.AddField(
            model_name='packageaccess',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.legalpackage'),
        ),
        migrations.AddField(
            model_name='packageaccess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentversion',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentversion',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='core.content'),
        ),
        migrations.AddField(
            model_name='contentbookmark',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_by', to='core.content'),
        ),
        migrations.AddField(
            model_name='contentbookmark',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='userprogress',
            index=models.Index(fields=['user', 'status'], name='core_user_p_user_id_6a1efe_idx'),
        ),
        migrations.AddIndex(
            model_name='userprogress',
            index=models.Index(fields=['content', 'status'], name='core_user_p_content_20fa84_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userprogress',
            unique_together={('user', 'content')},
        ),
        migrations.AddIndex(
            model_name='packageaccess',
            index=models.Index(fields=['user', 'package'], name='core_packag_user_id_21223d_idx'),
        ),
        migrations.AddIndex(
            model_name='packageaccess',
            index=models.Index(fields=['created_at'], name='core_packag_created_9308d8_idx'),
        ),
        migrations.AddIndex(
            model_name='contentversion',
            index=models.Index(fields=['content', 'version_number'], name='core_conten_content_6eaf5f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contentversion',
            unique_together={('content', 'version_number')},
        ),
        migrations.AddIndex(
            model_name='contentbookmark',
            index=models.Index(fields=['user', 'created_at'], name='core_conten_user_id_90a487_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contentbookmark',
            unique_together={('user', 'content')},
        ),
    ]
